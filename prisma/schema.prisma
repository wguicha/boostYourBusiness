// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id          String   @id @default(cuid())
  name        String
  description String?
  price       Decimal
  quantity    Int
  imageUrl    String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  SaleItem SaleItem[]
}

model Sale {
  id            String     @id @default(cuid())
  totalAmount   Decimal
  paymentMethod String
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt

  items         SaleItem[]
}

model SaleItem {
  id        String   @id @default(cuid())
  quantity  Int
  priceAtSale Decimal

  saleId    String
  sale      Sale     @relation(fields: [saleId], references: [id])

  productId String
  product   Product  @relation(fields: [productId], references: [id])
}

// NextAuth.js models
model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  password      String? // Added for CredentialsProvider
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
}

model VerificationToken {
  identifier String   @id @default(cuid())
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
